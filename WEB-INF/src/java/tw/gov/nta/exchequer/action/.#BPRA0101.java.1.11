/**
 * @author Andrew Sung
 * @create 2006/4/11
 */

package tw.gov.nta.exchequer.action;

import gov.dnt.tame.common.DefaultAction;
import gov.dnt.tame.common.ExcelReportBaseAction;

import java.math.BigDecimal;
import java.sql.Connection;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.apache.commons.dbutils.handlers.MapListHandler;
import org.apache.struts.action.ActionForm;

import tw.gov.nta.exchequer.form.Bpra0101Form;

import com.kangdainfo.ast.sql.ConnectionSQLRunner;
import com.kangdainfo.ast.sql.SQLJob;
import com.kangdainfo.ast.sql.SQLRunner;


public class BPRA0101 extends DefaultAction
//public class BPRA0101 extends ExcelReportBaseAction
{
	protected SQLJob delTemp(ActionForm form,String usrId){
		SQLJob sqljob = new SQLJob();
		sqljob.appendSQL("DELETE FROM BPRA01_RPT ");
		System.out.println(sqljob.toString());
		return sqljob;
		
	}
	/*
		select B.plan_repay_date, 
		case when B.plan_repay_date > min(B.Repay_date) then  min(B.Repay_date) else null end  repay_date,
		A.debt_name,
		datediff(dd,issue_date,due_date) as date_period,
		sum(distinct a.issue_amount) as issue_amount,
		sum(distinct B.capital_amount) as capital_amount,
		sum(distinct B.interest_amount) as interest_amount,
		A.issue_amount * A.charge_rate as change_amount
		from issue_main A, payment_main B
		where A.id = B.issue_id
		and A.debt_type = 'B'
		--and B.plan_repay_date between '1994-01-01' and '1994-12-31' --應還本日期區間
		group by B.plan_repay_date,A.debt_name,datediff(dd,issue_date,due_date)
		order by B.plan_repay_date
	 */
	protected SQLJob mainTemp(ActionForm form,String usrId){
		Bpra0101Form myForm = (Bpra0101Form)form;
		//String startDate = DateUtil.date2Str(myForm.getRepaySdate(),"yyyy/mm/dd");
		//String endDate = DateUtil.date2Str(myForm.getRepayEdate(),"yyyy/mm/dd");
		SQLJob sqljob = new SQLJob();
		sqljob.appendSQL(" INSERT INTO BPRA01_RPT ");
		sqljob.appendSQL(" ( ");
		sqljob.appendSQL(" ISSUE_ID, USRID, DUE_DATE, REPAY_DATE, ");
		sqljob.appendSQL(" DEBT_NAME,  DATE_PERIOD ,  ISSUE_AMOUNT,CAPITAL_AMOUNT, ");
		sqljob.appendSQL(" INTEREST_AMOUNT,ISSUE_PAY ");
		sqljob.appendSQL(" ) ");
		//以償還全部本金的期別
		sqljob.appendSQL(" SELECT A.id as ISSUE_ID,'"+usrId+"' as USRID," +
							"B.plan_repay_date as DUE_DATE,");
		sqljob.appendSQL("case when B.plan_repay_date > min(B.Repay_date) then  min(B.Repay_date) else null end  repay_date,");
		sqljob.appendSQL("A.debt_name,");
		sqljob.appendSQL("datediff(dd,issue_date,due_date) as date_period,");
		sqljob.appendSQL("isNull(sum(distinct a.issue_amount),0) as issue_amount,");		
		//計算實收數----------
		sqljob.appendSQL("isNull(sum(distinct B.capital_amount),0) as capital_amount,");		
		sqljob.appendSQL("isNull(sum(distinct B.interest_amount),0) as interest_amount,");		
		//計算經付手續費--------
		sqljob.appendSQL("(sum(distinct B.capital_amount) + sum(distinct B.interest_amount)) * A.charge_rate as change_amount ");

		sqljob.appendSQL("from issue_main A, payment_main B ");
		sqljob.appendSQL("where A.id = B.issue_id ");
		sqljob.appendSQL("and A.debt_type = 'B' ");
		sqljob.appendSQL("and B.repay_date between ? and ? ");
		sqljob.addParameter(myForm.getRepaySdate());
		sqljob.addParameter(myForm.getRepayEdate());
		sqljob.appendSQL("group by A.id,B.plan_repay_date,A.debt_name,datediff(dd,issue_date,due_date),A.issue_amount,A.charge_rate ");
	
		//尚未償還本金的期別
		sqljob.appendSQL("union ");
		sqljob.appendSQL("select A.id as ISSUE_ID,'"+usrId+"' as USRID," + 
							"B.repay_date as DUE_DATE,");
		sqljob.appendSQL("null as  repay_date,");
		sqljob.appendSQL("A.debt_name,");
		sqljob.appendSQL("datediff(dd,issue_date,due_date) as date_period, ");
		sqljob.appendSQL("sum(distinct a.issue_amount) as issue_amount, ");
		sqljob.appendSQL("sum(distinct B.capital_amount) as capital_amount, ");
		sqljob.appendSQL("sum(distinct B.interest_amount) as interest_amount, ");
		sqljob.appendSQL("(sum(distinct B.capital_amount) + sum(distinct B.interest_amount)) * A.charge_rate as change_amount ");
//		sqljob.appendSQL("A.issue_amount * A.charge_rate as change_amount ");         
		sqljob.appendSQL("from issue_main A, debt_plan_det B ");
		sqljob.appendSQL("where A.id = B.issue_id ");
		sqljob.appendSQL("and A.debt_type = 'B' ");
		sqljob.appendSQL("and B.issue_id not in (select issue_id from payment_main) ");
		sqljob.appendSQL("and B.repay_date between ? and ? ");//應還本日期區間
		sqljob.addParameter(myForm.getRepaySdate());
		sqljob.addParameter(myForm.getRepayEdate());
		sqljob.appendSQL("group by A.id,B.repay_date,A.debt_name,datediff(dd,issue_date,due_date),A.issue_amount,A.charge_rate ");
		
		//部分提前償還本金的期別
		sqljob.appendSQL("union ");
		sqljob.appendSQL("select A.id as ISSUE_ID,'"+usrId+"' as USRID," + 
							"B.repay_date as DUE_DATE,");
		sqljob.appendSQL("null as  repay_date,");
		sqljob.appendSQL("A.debt_name,");
		sqljob.appendSQL("datediff(dd,issue_date,due_date) as date_period,");
		sqljob.appendSQL("sum(distinct a.issue_amount) as issue_amount,");
		sqljob.appendSQL("(sum(distinct B.capital_amount) - sum(distinct C.capital_amount)) as capital_amount,");
		sqljob.appendSQL("sum(distinct B.interest_amount) as interest_amount,");
		sqljob.appendSQL("(sum(distinct B.capital_amount) - sum(distinct C.capital_amount) + sum(distinct B.interest_amount)) * A.charge_rate as change_amount ");       
		sqljob.appendSQL("from issue_main A, debt_plan_det B, payment_main C ");
		sqljob.appendSQL("where A.id = B.issue_id and B.id = C.plan_id ");
		sqljob.appendSQL("and A.debt_type = 'B' ");
		sqljob.appendSQL("and A.capital_amount < (select sum(real_amount) from debt_main debt where debt.issue_id = A.id ) ");
		sqljob.appendSQL("and B.repay_date between ? and ? ");//應還本日期區間
		sqljob.addParameter(myForm.getRepaySdate());
		sqljob.addParameter(myForm.getRepayEdate());
		sqljob.appendSQL("group by A.id,B.repay_date,A.debt_name,datediff(dd,issue_date,due_date),A.issue_amount,A.charge_rate ");
		
		sqljob.appendSQL("order by B.plan_repay_date ");
		System.out.println(sqljob.toString());
		return sqljob;
	}
	
	protected SQLJob tmpTableData(){
		
		SQLJob sqljob = new SQLJob();
		sqljob.appendSQL(" select * from BPRA01_RPT ");
		
		return sqljob;
	}

	@Override
	public void executeQuery(ActionForm form, HttpServletRequest request, Connection connection) throws Exception
	{
		//取得使用者帳號
		String usrId = this.getUserId(request);
		//取得SQLRunner
		SQLRunner run = new ConnectionSQLRunner(connection);
		//執行 delete 
		run.update(connection,delTemp(form,usrId));
		//執行 insert
		run.update(connection, mainTemp(form,usrId));
		
//		List tList = (List) run.query(mainTemp(form,usrId), new MapListHandler());
//		Map tMap = new HashMap();
//		Map tmpMap = new HashMap();
//		Integer issueId = 0;
//		int i=1;
//		BigDecimal interestAmount = new BigDecimal(0);
//
//		//資料Map
//		for(Iterator tIterator = tList.iterator(); tIterator.hasNext(); )
//		{
//			tMap = (Map) tIterator.next();
//			Map dMap = new HashMap();
//			BigDecimal capitalAmount = new BigDecimal(0);
//			BigDecimal tmpInterestAmount = new BigDecimal(0);
//			if((BigDecimal)tmpMap.get("INTEREST_AMOUNT") != null){
//				tmpInterestAmount = (BigDecimal)tmpMap.get("INTEREST_AMOUNT");
//			}
//			
//			interestAmount = tmpInterestAmount.add((BigDecimal)tMap.get("INTEREST_AMOUNT"));
//
//			if(!issueId.equals((Integer)tMap.get("ISSUE_ID")) && i != 1){
//
//				BigDecimal issuePay = ((BigDecimal) tmpMap.get("CAPITAL_AMOUNT")).add(interestAmount).multiply(new BigDecimal(0.0004));
//				//填入實際資料
//				dMap.put("ISSUE_ID",(Integer)tmpMap.get("ISSUE_ID"));
//				dMap.put("USRID",(String)tmpMap.get("USRID"));
//				dMap.put("DUE_DATE",(Date)tmpMap.get("DUE_DATE"));
//				dMap.put("REPAY_DATE",(Date)tmpMap.get("REPAY_DATE"));
//				dMap.put("DEBT_NAME",(String)tmpMap.get("DEBT_NAME"));			
//				dMap.put("DATE_PERIOD",(Integer)tmpMap.get("DATE_PERIOD"));
//				dMap.put("ISSUE_AMOUNT",(BigDecimal)tmpMap.get("ISSUE_AMOUNT"));
//				dMap.put("CAPITAL_AMOUNT",(BigDecimal)tmpMap.get("CAPITAL_AMOUNT"));
//				dMap.put("INTEREST_AMOUNT",interestAmount);
//				dMap.put("ISSUE_PAY",issuePay);
//				interestAmount = new BigDecimal(0);
//				run.update(connection,insTemp("BPRA01_RPT",dMap));
//			}else if(i == tList.size()){
//				BigDecimal issuePay = ((BigDecimal) tMap.get("CAPITAL_AMOUNT")).multiply(new BigDecimal(0.0004));
//				dMap.put("ISSUE_ID",(Integer)tMap.get("ISSUE_ID"));
//				dMap.put("USRID",(String)tMap.get("USRID"));
//				dMap.put("DUE_DATE",(Date)tMap.get("DUE_DATE"));
//				dMap.put("REPAY_DATE",(Date)tMap.get("REPAY_DATE"));
//				dMap.put("DEBT_NAME",(String)tMap.get("DEBT_NAME"));			
//				dMap.put("DATE_PERIOD",(Integer)tMap.get("DATE_PERIOD"));
//				dMap.put("ISSUE_AMOUNT",(BigDecimal)tMap.get("ISSUE_AMOUNT"));
//				dMap.put("CAPITAL_AMOUNT",(BigDecimal)tMap.get("CAPITAL_AMOUNT"));
//				dMap.put("INTEREST_AMOUNT",(BigDecimal)tMap.get("INTEREST_AMOUNT"));
//				dMap.put("ISSUE_PAY",issuePay);
//				run.update(connection,insTemp("BPRA01_RPT",dMap));
//			}
//			
//			//暫存資料
//			tmpMap.put("ISSUE_ID",(Integer)tMap.get("ISSUE_ID"));
//			tmpMap.put("USRID",(String)tMap.get("USRID"));
//			tmpMap.put("DUE_DATE",(Date)tMap.get("DUE_DATE"));
//			tmpMap.put("REPAY_DATE",(Date)tMap.get("REPAY_DATE"));
//			tmpMap.put("DEBT_NAME",(String)tMap.get("DEBT_NAME"));			
//			tmpMap.put("DATE_PERIOD",(Integer)tMap.get("DATE_PERIOD"));
//			tmpMap.put("ISSUE_AMOUNT",(BigDecimal)tMap.get("ISSUE_AMOUNT"));
//			tmpMap.put("CAPITAL_AMOUNT",(BigDecimal)tMap.get("CAPITAL_AMOUNT"));
//			tmpMap.put("INTEREST_AMOUNT",(BigDecimal)tMap.get("INTEREST_AMOUNT"));
//			
//			
//			capitalAmount = (BigDecimal)tMap.get("CAPITAL_AMOUNT");
//			interestAmount = (BigDecimal)tMap.get("INTEREST_AMOUNT");
//			
//			issueId = (Integer)tMap.get("ISSUE_ID");
//			i += 1;
//		}
	}
}
